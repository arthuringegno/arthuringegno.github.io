document.addEventListener('DOMContentLoaded', function() {
    // Menu Mobile
    const menuToggle = document.getElementById('mobile-menu');
    const navMenu = document.querySelector('.nav-menu');
    
    menuToggle.addEventListener('click', function() {
        this.classList.toggle('active');
        navMenu.classList.toggle('active');
    });
    
    // Fechar menu ao clicar em um link
    document.querySelectorAll('.nav-links').forEach(link => {
        link.addEventListener('click', () => {
            menuToggle.classList.remove('active');
            navMenu.classList.remove('active');
        });
    });
    
    // Modal de Emerg√™ncia
    const emergencyBtn = document.getElementById('emergencyBtn');
    const emergencyModal = document.getElementById('emergencyModal');
    const closeModal = document.getElementById('closeModal');
    
    emergencyBtn.addEventListener('click', () => {
        emergencyModal.style.display = 'flex';
        document.body.style.overflow = 'hidden';
    });
    
    closeModal.addEventListener('click', () => {
        emergencyModal.style.display = 'none';
        document.body.style.overflow = 'auto';
    });
    
    // Fechar modal ao clicar fora
    window.addEventListener('click', (e) => {
        if (e.target === emergencyModal) {
            emergencyModal.style.display = 'none';
            document.body.style.overflow = 'auto';
        }
    });
    
    // Bot√µes do Modal
    document.getElementById('modalFindClinicBtn').addEventListener('click', () => {
        emergencyModal.style.display = 'none';
        document.body.style.overflow = 'auto';
        document.querySelector('#clinicas').scrollIntoView({
            behavior: 'smooth'
        });
    });
    
    document.getElementById('chatVetBtn').addEventListener('click', () => {
        emergencyModal.style.display = 'none';
        document.body.style.overflow = 'auto';
        document.querySelector('#veterinarios').scrollIntoView({
            behavior: 'smooth'
        });
    });
    
    document.getElementById('firstAidBtn').addEventListener('click', () => {
        emergencyModal.style.display = 'none';
        document.body.style.overflow = 'auto';
        document.querySelector('#socorros').scrollIntoView({
            behavior: 'smooth'
        });
    });
    
    document.getElementById('callVetBtn').addEventListener('click', () => {
        window.location.href = 'tel:+5511987654321';
    });
    
    // Assistente Virtual
    const chatContainer = document.getElementById('chatContainer');
    const userInput = document.getElementById('userInput');
    const sendBtn = document.getElementById('sendBtn');
    const quickBtns = document.querySelectorAll('.quick-btn');
    
    // Respostas pr√©-definidas
    const responses = {
        'envenenamento': {
            title: 'Envenenamento',
            steps: [
                '1. Mantenha a calma e afaste seu pet da fonte de envenenamento',
                '2. Identifique a subst√¢ncia ingerida, se poss√≠vel (guarde a embalagem)',
                '3. N√£o induza o v√¥mito sem orienta√ß√£o veterin√°ria',
                '4. Ligue imediatamente para um veterin√°rio ou centro de toxicologia',
                '5. Transporte seu pet para a cl√≠nica veterin√°ria mais pr√≥xima'
            ],
            warning: 'N√ÉO d√™ leite, √°gua ou qualquer subst√¢ncia sem orienta√ß√£o profissional.'
        },
        'fratura': {
            title: 'Fratura ou Les√£o √ìssea',
            steps: [
                '1. Imobilize o animal para evitar movimentos bruscos',
                '2. N√£o tente colocar o osso no lugar',
                '3. Para fraturas expostas, cubra com gaze ou pano limpo',
                '4. Transporte com cuidado, usando uma superf√≠cie r√≠gida como apoio',
                '5. Evite dar analg√©sicos humanos sem orienta√ß√£o veterin√°ria'
            ],
            warning: 'Animais com dor podem morder - use uma toalha para manusear com seguran√ßa.'
        },
        'convulsao': {
            title: 'Convuls√£o',
            steps: [
                '1. Afaste objetos que possam machucar o animal',
                '2. N√£o tente segurar a l√≠ngua do pet',
                '3. Cronometre a dura√ß√£o da convuls√£o',
                '4. Mantenha o ambiente calmo e com pouca luz',
                '5. Ap√≥s a crise, mantenha o animal em local tranquilo e aquecido',
                '6. Leve ao veterin√°rio mesmo que a convuls√£o tenha passado'
            ],
            warning: 'Nunca coloque as m√£os perto da boca do animal durante a convuls√£o.'
        },
        'dificuldade-respirar': {
            title: 'Dificuldade Respirat√≥ria',
            steps: [
                '1. Mantenha o animal calmo e em repouso',
                '2. Verifique se h√° objetos obstruindo as vias a√©reas',
                '3. Se houver corpo estranho vis√≠vel, tente remover com cuidado',
                '4. Mantenha o pesco√ßo estendido para facilitar a respira√ß√£o',
                '5. Leve imediatamente ao veterin√°rio',
                '6. Se poss√≠vel, transporte com janelas abertas para ventila√ß√£o'
            ],
            warning: 'Animais com dificuldade respirat√≥ria podem entrar em p√¢nico - manuseie com cuidado.'
        }
    };
    
    // Fun√ß√£o para adicionar mensagem ao chat
    function addMessage(message, isUser = false) {
        const messageDiv = document.createElement('div');
        messageDiv.classList.add('chat-message');
        messageDiv.classList.add(isUser ? 'user-message' : 'bot-message');
        
        const messageContent = document.createElement('p');
        messageContent.textContent = message;
        
        messageDiv.appendChild(messageContent);
        chatContainer.appendChild(messageDiv);
        chatContainer.scrollTop = chatContainer.scrollHeight;
    }
    
    // Fun√ß√£o para processar a entrada do usu√°rio
    function processUserInput(input) {
        addMessage(input, true);
        userInput.value = '';
        
        // Simular "digitando..."
        const typingIndicator = document.createElement('div');
        typingIndicator.classList.add('chat-message', 'bot-message');
        typingIndicator.innerHTML = '<p><i class="fas fa-ellipsis-h"></i></p>';
        chatContainer.appendChild(typingIndicator);
        chatContainer.scrollTop = chatContainer.scrollHeight;
        
        // Simular tempo de resposta
        setTimeout(() => {
            chatContainer.removeChild(typingIndicator);
            
            // Verificar se √© um problema conhecido
            let foundResponse = false;
            for (const [key, response] of Object.entries(responses)) {
                if (input.toLowerCase().includes(key)) {
                    showEmergencyGuide(response);
                    foundResponse = true;
                    break;
                }
            }
            
            if (!foundResponse) {
                addMessage('Entendi que seu pet est√° com: "' + input + '". Enquanto n√£o h√° um veterin√°rio dispon√≠vel, posso sugerir que voc√™:');
                addMessage('1. Mantenha a calma e observe os sintomas do seu pet');
                addMessage('2. Remova qualquer perigo imediato do ambiente');
                addMessage('3. N√£o administre medicamentos sem orienta√ß√£o profissional');
                addMessage('4. Entre em contato com uma cl√≠nica de emerg√™ncia imediatamente');
                addMessage('Para orienta√ß√µes mais espec√≠ficas, clique em um dos bot√µes de emerg√™ncia acima ou descreva melhor os sintomas.');
            }
        }, 1500);
    }
    
    // Fun√ß√£o para mostrar guia de emerg√™ncia
    function showEmergencyGuide(response) {
        addMessage(`üî¥ EMERG√äNCIA: ${response.title.toUpperCase()} üî¥`);
        addMessage('Siga estas instru√ß√µes imediatamente:');
        
        response.steps.forEach(step => {
            addMessage(step);
        });
        
        addMessage(`‚ö†Ô∏è ATEN√á√ÉO: ${response.warning}`);
        addMessage('Por favor, dirija-se √† cl√≠nica veterin√°ria mais pr√≥xima o mais r√°pido poss√≠vel.');
        
        // Adicionar bot√£o para encontrar cl√≠nicas
        const clinicBtn = document.createElement('button');
        clinicBtn.classList.add('btn', 'secondary-btn');
        clinicBtn.style.marginTop = '10px';
        clinicBtn.innerHTML = '<i class="fas fa-map-marker-alt"></i> Encontrar Cl√≠nica Mais Pr√≥xima';
        clinicBtn.addEventListener('click', () => {
            document.querySelector('#clinicas').scrollIntoView({
                behavior: 'smooth'
            });
        });
        
        const messageDiv = document.createElement('div');
        messageDiv.classList.add('chat-message', 'bot-message');
        messageDiv.appendChild(clinicBtn);
        chatContainer.appendChild(messageDiv);
        chatContainer.scrollTop = chatContainer.scrollHeight;
    }
    
    // Evento de envio de mensagem
    sendBtn.addEventListener('click', () => {
        if (userInput.value.trim() !== '') {
            processUserInput(userInput.value.trim());
        }
    });
    
    userInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter' && userInput.value.trim() !== '') {
            processUserInput(userInput.value.trim());
        }
    });
    
    // Bot√µes r√°pidos
    quickBtns.forEach(btn => {
        btn.addEventListener('click', () => {
            const issue = btn.getAttribute('data-issue');
            if (responses[issue]) {
                processUserInput(issue);
            }
        });
    });
    
    // Simular Mapa de Cl√≠nicas
    function initMap() {
        // Esta fun√ß√£o seria substitu√≠da pela API do Google Maps
        // Aqui est√° uma simula√ß√£o para demonstra√ß√£o
        const clinics = [
            {
                name: 'Cl√≠nica Vet24 Horas',
                address: 'Av. Paulista, 1000 - S√£o Paulo',
                phone: '(11) 1234-5678',
                distance: '1.2 km'
            },
            {
                name: 'Hospital Veterin√°rio PetCare',
                address: 'Rua Augusta, 500 - S√£o Paulo',
                phone: '(11) 9876-5432',
                distance: '2.5 km'
            },
            {
                name: 'Emerg√™ncia Vet Animal',
                address: 'Rua da Consola√ß√£o, 200 - S√£o Paulo',
                phone: '(11) 4567-8901',
                distance: '3.1 km'
            },
            {
                name: 'Vet Emergency Center',
                address: 'Alameda Santos, 800 - S√£o Paulo',
                phone: '(11) 2345-6789',
                distance: '4.0 km'
            }
        ];
        
        const clinicsList = document.getElementById('clinicsList');
        clinics.forEach(clinic => {
            const clinicItem = document.createElement('div');
            clinicItem.classList.add('clinic-item');
            
            clinicItem.innerHTML = `
                <h4 class="clinic-name">${clinic.name}</h4>
                <p class="clinic-address"><i class="fas fa-map-marker-alt"></i> ${clinic.address}</p>
                <p class="clinic-phone"><i class="fas fa-phone"></i> ${clinic.phone}</p>
                <span class="clinic-distance"><i class="fas fa-walking"></i> ${clinic.distance}</span>
                <button class="btn secondary-btn" style="margin-top: 0.5rem; width: 100%;">
                    <i class="fas fa-directions"></i> Como chegar
                </button>
            `;
            
            clinicsList.appendChild(clinicItem);
        });
        
        // Adicionar evento aos bot√µes "Como chegar"
        document.querySelectorAll('.clinic-item .btn').forEach(btn => {
            btn.addEventListener('click', function() {
                alert('Esta funcionalidade integraria com o Google Maps para mostrar a rota at√© a cl√≠nica selecionada.');
            });
        });
    }
    
    // Simular Guia de Primeiros Socorros
    function loadFirstAidGuides() {
        const guides = [
            {
                title: 'Engasgo em C√£es',
                description: 'Aprenda como agir quando seu c√£o est√° engasgado e n√£o consegue respirar.',
                image: 'assets/images/dog-choking.jpg'
            },
            {
                title: 'Intoxica√ß√£o Alimentar',
                description: 'O que fazer quando seu pet ingere algo t√≥xico ou estragado.',
                image: 'assets/images/poisoning.jpg'
            },
            {
                title: 'Ferimentos e Cortes',
                description: 'Como limpar e proteger ferimentos at√© chegar ao veterin√°rio.',
                image: 'assets/images/wound.jpg'
            },
            {
                title: 'Golpe de Calor',
                description: 'Identifique e trate rapidamente casos de hipertermia em pets.',
                image: 'assets/images/heat-stroke.jpg'
            },
            {
                title: 'Convuls√µes',
                description: 'Saiba como agir durante uma crise convulsiva do seu pet.',
                image: 'assets/images/seizure.jpg'
            },
            {
                title: 'Queimaduras',
                description: 'Primeiros cuidados com queimaduras t√©rmicas ou qu√≠micas.',
                image: 'assets/images/burn.jpg'
            }
        ];
        
        const firstAidGrid = document.querySelector('.first-aid-grid');
        
        guides.forEach(guide => {
            const guideCard = document.createElement('div');
            guideCard.classList.add('first-aid-card');
            
            guideCard.innerHTML = `
                <div class="first-aid-image" style="background-image: url(${guide.image})"></div>
                <div class="first-aid-content">
                    <h3 class="first-aid-title">${guide.title}</h3>
                    <p class="first-aid-description">${guide.description}</p>
                    <a href="#" class="first-aid-link">Ver procedimento completo ‚Üí</a>
                </div>
            `;
            
            firstAidGrid.appendChild(guideCard);
        });
        
        // Adicionar evento aos links
        document.querySelectorAll('.first-aid-link').forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                alert('Esta funcionalidade mostraria o guia completo em uma nova p√°gina.');
            });
        });
    }
    
    // Inicializar componentes
    initMap();
    loadFirstAidGuides();
    
    // Verificar geolocaliza√ß√£o
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(
            (position) => {
                console.log('Localiza√ß√£o encontrada:', position.coords.latitude, position.coords.longitude);
                // Aqui voc√™ usaria as coordenadas para encontrar cl√≠nicas pr√≥ximas
            },
            (error) => {
                console.error('Erro ao obter localiza√ß√£o:', error);
            }
        );
    }
    
    // Adicionar classe ativa ao scroll
    window.addEventListener('scroll', function() {
        const sections = document.querySelectorAll('section');
        const navLinks = document.querySelectorAll('.nav-links');
        
        let current = '';
        
        sections.forEach(section => {
            const sectionTop = section.offsetTop;
            const sectionHeight = section.clientHeight;
            
            if (pageYOffset >= (sectionTop - 300)) {
                current = section.getAttribute('id');
            }
        });
        
        navLinks.forEach(link => {
            link.classList.remove('active');
            if (link.getAttribute('href') === `#${current}`) {
                link.classList.add('active');
            }
        });
    });
    
    // Bot√£o de encontrar cl√≠nica no hero
    document.getElementById('findClinicBtn').addEventListener('click', () => {
        document.querySelector('#clinicas').scrollIntoView({
            behavior: 'smooth'
        });
    });
});